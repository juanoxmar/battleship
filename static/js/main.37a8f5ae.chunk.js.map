{"version":3,"sources":["components/validation.js","components/ship.js","components/gameboard.js","components/computerShips.js","components/fields.js","components/player.js","App.js","index.js"],"names":["rowVal","ship","length","Yup","required","when","is","val","then","test","value","colVal","validationSchema","Carrierrow","Carriercol","Carrierdir","inter","shipSquares","this","parent","Battleshiprow","Battleshipcol","Battleshipdir","Destroyerrow","Destroyercol","Destroyerdir","Submarinerow","Submarinecol","Submarinedir","Patrolboatrow","Patrolboatcol","Patrolboatdir","initialValues","bk","keys","r","c","split","Array","from","_","i","j","arr1","arr2","intersection","direction","l","arr","k","push","name","health","fill","hit","t","isSunk","indexOf","Gameboard","props","shipInput","data","board","state","fleet","placement","Carrier","Battleship","Destroyer","Submarine","Patrolboat","setState","fleetDown","handleClick","e","target","disabled","compKey","innerHTML","receiveAttack","myBoard","hitText","sunkText","text","buttonText","key","isArray","computer","Ship","map","input","column","row","onClick","className","btnC","dis","id","ids","who","React","Component","output","Math","floor","random","concat","Row","label","useField","field","meta","errorText","error","touched","TextField","helperText","margin","type","select","MenuItem","Column","Direction","Player","computerPlay","enemyBoard","compCheck","winCheck","eBoard","onClickHandle","isSubmitted","location","Fragment","onSubmit","setSubmitting","validateOnChange","validateOnBlur","dirty","isValid","isSubmitting","values","x","Button","variant","color","ref","theme","createMuiTheme","palette","primary","main","purple","secondary","App","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37a8f5ae.chunk.js","sourcesContent":["import * as Yup from 'yup';\nimport _ from 'lodash';\n\nconst rowVal = (ship, length) =>\n  Yup.number()\n    .required('Required')\n    .when(ship + 'dir', {\n      is: (val) => val === 1,\n      then: Yup.number()\n        .required('Required')\n        .test('isOnBoard', 'Ship is off the board!', (value) =>\n          value + length > 10 ? false : true\n        ),\n    });\n\nconst colVal = (ship, length) =>\n  Yup.number()\n    .required('Required')\n    .when(ship + 'dir', {\n      is: (val) => val === 0,\n      then: Yup.number()\n        .required('Required')\n        .test('isOnBoard', 'Ship is off the board!', (value) =>\n          value + length > 10 ? false : true\n        ),\n    });\n\nconst dirCar = () =>\n  Yup.number()\n    .required('Required')\n    .test('collide Car/BS', 'Collision with Battleship!', function (value) {\n      return !inter(\n        shipSquares(this.parent.Carrierrow, this.parent.Carriercol, value, 5),\n        shipSquares(\n          this.parent.Battleshiprow,\n          this.parent.Battleshipcol,\n          this.parent.Battleshipdir,\n          4\n        )\n      );\n    })\n    .test('collide Car/Des', 'Collision with Destroyer!', function (value) {\n      return !inter(\n        shipSquares(this.parent.Carrierrow, this.parent.Carriercol, value, 5),\n        shipSquares(\n          this.parent.Destroyerrow,\n          this.parent.Destroyercol,\n          this.parent.Destroyerdir,\n          3\n        )\n      );\n    })\n    .test('collide Car/Sub', 'Collision with Submarine!', function (value) {\n      return !inter(\n        shipSquares(this.parent.Carrierrow, this.parent.Carriercol, value, 5),\n        shipSquares(\n          this.parent.Submarinerow,\n          this.parent.Submarinecol,\n          this.parent.Submarinedir,\n          3\n        )\n      );\n    })\n    .test('collide Car/Pat', 'Collision with Patrolboat!', function (value) {\n      return !inter(\n        shipSquares(this.parent.Carrierrow, this.parent.Carriercol, value, 5),\n        shipSquares(\n          this.parent.Patrolboatrow,\n          this.parent.Patrolboatcol,\n          this.parent.Patrolboatdir,\n          2\n        )\n      );\n    });\n\nconst dirBattle = () =>\n  Yup.number()\n    .required('Required')\n    .test('collide BS/Des', 'Collision with Destroyer!', function (value) {\n      return !inter(\n        shipSquares(\n          this.parent.Battleshiprow,\n          this.parent.Battleshipcol,\n          value,\n          4\n        ),\n        shipSquares(\n          this.parent.Destroyerrow,\n          this.parent.Destroyercol,\n          this.parent.Destroyerdir,\n          3\n        )\n      );\n    })\n    .test('collide BS/Sub', 'Collision with Submarine!', function (value) {\n      return !inter(\n        shipSquares(\n          this.parent.Battleshiprow,\n          this.parent.Battleshipcol,\n          value,\n          4\n        ),\n        shipSquares(\n          this.parent.Submarinerow,\n          this.parent.Submarinecol,\n          this.parent.Submarinedir,\n          3\n        )\n      );\n    })\n    .test('collide BS/Pat', 'Collision with Patrolboat!', function (value) {\n      return !inter(\n        shipSquares(\n          this.parent.Battleshiprow,\n          this.parent.Battleshipcol,\n          value,\n          4\n        ),\n        shipSquares(\n          this.parent.Patrolboatrow,\n          this.parent.Patrolboatcol,\n          this.parent.Patrolboatdir,\n          2\n        )\n      );\n    });\n\nconst dirDes = () =>\n  Yup.number()\n    .required('Required')\n    .test('collide Des/Sub', 'Collision with Submarine!', function (value) {\n      return !inter(\n        shipSquares(\n          this.parent.Destroyerrow,\n          this.parent.Destroyercol,\n          value,\n          3\n        ),\n        shipSquares(\n          this.parent.Submarinerow,\n          this.parent.Submarinecol,\n          this.parent.Submarinedir,\n          3\n        )\n      );\n    })\n    .test('collide Des/Sub', 'Collision with Submarine!', function (value) {\n      return !inter(\n        shipSquares(\n          this.parent.Destroyerrow,\n          this.parent.Destroyercol,\n          value,\n          3\n        ),\n        shipSquares(\n          this.parent.Patrolboatrow,\n          this.parent.Patrolboatcol,\n          this.parent.Patrolboatdir,\n          2\n        )\n      );\n    });\n\nconst dirSub = () =>\n  Yup.number()\n    .required('Required')\n    .test('collide Sub/Pat', 'Collision with Patrolboat!', function (value) {\n      return !inter(\n        shipSquares(\n          this.parent.Submarinerow,\n          this.parent.Submarinecol,\n          value,\n          3\n        ),\n        shipSquares(\n          this.parent.Patrolboatrow,\n          this.parent.Patrolboatcol,\n          this.parent.Patrolboatdir,\n          2\n        )\n      );\n    });\n\nexport const validationSchema = Yup.object({\n  Carrierrow: rowVal('Carrier', 5),\n  Carriercol: colVal('Carrier', 5),\n  Carrierdir: dirCar(),\n  Battleshiprow: rowVal('Battleship', 4),\n  Battleshipcol: colVal('Battleship', 4),\n  Battleshipdir: dirBattle(),\n  Destroyerrow: rowVal('Destroyer', 3),\n  Destroyercol: colVal('Destroyer', 3),\n  Destroyerdir: dirDes(),\n  Submarinerow: rowVal('Submarine', 3),\n  Submarinecol: colVal('Submarine', 3),\n  Submarinedir: dirSub(),\n  Patrolboatrow: rowVal('Patrolboat', 2),\n  Patrolboatcol: colVal('Patrolboat', 2),\n  Patrolboatdir: Yup.number().required('Required'),\n});\n\nexport const initialValues = {\n  Carrierrow: '',\n  Carriercol: '',\n  Carrierdir: '',\n  Battleshiprow: '',\n  Battleshipcol: '',\n  Battleshipdir: '',\n  Destroyerrow: '',\n  Destroyercol: '',\n  Destroyerdir: '',\n  Submarinerow: '',\n  Submarinecol: '',\n  Submarinedir: '',\n  Patrolboatrow: '',\n  Patrolboatcol: '',\n  Patrolboatdir: '',\n};\n\nexport const bk = {};\nexport const keys = (r, c) =>\n  'ABCDEFGHIJ'.split('')[r] + Array.from(Array(10), (_, i) => i + 1)[c];\n\nfor (let j = 0; j < 10; j++) {\n  for (let i = 0; i < 10; i++) {\n    bk[keys(i, j)] = [i, j];\n  }\n}\n\nexport const inter = (arr1, arr2) => _.intersection(arr1, arr2).length > 0;\nexport const shipSquares = (r, c, direction, l) => {\n  const arr = [];\n  for (let i = 0; i < l; i++) {\n    let j = 0,\n      k = 0;\n    direction === 1 ? (j = i) : (k = i);\n    arr.push(keys(r + j, c + k));\n  }\n  return arr;\n};\n","export default (name, length) => {\n  const health = Array(length).fill(false);\n  const hit = (t) => {\n    health[t] = true;\n  };\n  const isSunk = () => (health.indexOf(false) === -1 ? true : false);\n  return { name, length, health, hit, isSunk };\n};\n","import React from 'react';\nimport Ship from './ship';\nimport { bk, keys } from './validation';\n\nexport default class Gameboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fleet: {\n        Carrier: Ship('Carrier', 5),\n        Battleship: Ship('Battleship', 4),\n        Destroyer: Ship('Destroyer', 3),\n        Submarine: Ship('Submarine', 3),\n        Patrolboat: Ship('Patrolboat', 2),\n      },\n      board: Array(10)\n        .fill(null)\n        .map(() => Array(10).fill(null)),\n      hitText: '',\n      sunkText: '',\n      computer: 0,\n      input: null,\n    };\n  }\n\n  shipInput = (data) => {\n    const board = this.state.board;\n    const ship = this.state.fleet;\n    const placement = (r, c, direction, ship) => {\n      for (let i = 0; i < ship.length; i++) {\n        let j = 0,\n          k = 0;\n        direction === 1 ? (j = i) : (k = i);\n        board[r + j][c + k] = [ship.name, 0 + i];\n      }\n    };\n    placement(data.Carrierrow, data.Carriercol, data.Carrierdir, ship.Carrier);\n    placement(\n      data.Battleshiprow,\n      data.Battleshipcol,\n      data.Battleshipdir,\n      ship.Battleship\n    );\n    placement(\n      data.Destroyerrow,\n      data.Destroyercol,\n      data.Destroyerdir,\n      ship.Destroyer\n    );\n    placement(\n      data.Submarinerow,\n      data.Submarinecol,\n      data.Submarinedir,\n      ship.Submarine\n    );\n    placement(\n      data.Patrolboatrow,\n      data.Patrolboatcol,\n      data.Patrolboatdir,\n      ship.Patrolboat\n    );\n    this.setState({\n      board: board,\n    });\n  };\n\n  fleetDown = () => {\n    const fleet = this.state.fleet;\n    return fleet.Carrier.isSunk() &&\n      fleet.Battleship.isSunk() &&\n      fleet.Destroyer.isSunk() &&\n      fleet.Submarine.isSunk() &&\n      fleet.Patrolboat.isSunk()\n      ? true\n      : false;\n  };\n\n  handleClick = (e) => {\n    e.target.disabled = true;\n    const compKey = bk;\n    const [r, c] = compKey[e.target.innerHTML];\n    this.receiveAttack(r, c);\n  };\n\n  receiveAttack = (r, c) => {\n    const board = this.state.board;\n    const fleet = this.state.fleet;\n    if (board[r][c] === null) {\n      board[r][c] = false;\n      this.setState({ myBoard: board, hitText: 'Miss!' });\n      return false;\n    } else {\n      fleet[board[r][c][0]].hit(board[r][c][1]);\n      if (fleet[board[r][c][0]].isSunk()) {\n        if (this.fleetDown()) {\n          const text = `You sunk my fleet! You Win!`;\n          board[r][c] = true;\n          this.setState({\n            myBoard: board,\n            hitText: 'Hit!',\n            sunkText: text,\n          });\n        } else {\n          const text = `You sunk my ${fleet[board[r][c][0]].name}!`;\n          board[r][c] = true;\n          this.setState({\n            myBoard: board,\n            hitText: 'Hit!',\n            sunkText: text,\n          });\n        }\n      } else {\n        board[r][c] = true;\n        this.setState({ myBoard: board, hitText: 'Hit!', sunkText: '' });\n      }\n      return true;\n    }\n  };\n\n  buttonText = (j, i) => {\n    const key = keys;\n    const board = this.state.board;\n    if (board[j][i] === null) return key(j, i);\n    else if (Array.isArray(board[j][i]) && this.state.computer === 1)\n      return '\\u{1F6A2}';\n    else if (Array.isArray(board[j][i])) return key(j, i);\n    else if (board[j][i]) return '\\u{1F525}';\n    else if (!board[j][i]) return '\\u{1F30A}';\n  };\n\n  componentDidMount() {\n    this.shipInput(this.props.input);\n    this.setState({ computer: this.props.computer });\n  }\n\n  render() {\n    const key = keys;\n    const column = [];\n    for (let j = 0; j < 10; j++) {\n      const row = [];\n      for (let i = 0; i < 10; i++) {\n        row.push(\n          <div onClick={this.props.onClick} key={key(j, i)}>\n            <button\n              className={this.props.btnC}\n              disabled={this.props.dis}\n              onClick={this.handleClick}\n              id={this.props.ids + key(j, i)}\n              key={key(j, i)}\n            >\n              {this.buttonText(j, i)}\n            </button>\n          </div>\n        );\n      }\n      column.push(\n        <div className='row' key={j}>\n          {row}\n        </div>\n      );\n    }\n    return (\n      <div className='enemyBoard' computer={this.state.computer}>\n        {column}\n        <span>{this.props.who}</span>\n        <span>{this.state.hitText}</span>\n        <span>{this.state.sunkText}</span>\n      </div>\n    );\n  }\n}\n","import { inter, shipSquares } from './validation';\n\nexport default () => {\n  const output = {\n    Carrierrow: '',\n    Carriercol: '',\n    Carrierdir: '',\n    Battleshiprow: '',\n    Battleshipcol: '',\n    Battleshipdir: '',\n    Destroyerrow: '',\n    Destroyercol: '',\n    Destroyerdir: '',\n    Submarinerow: '',\n    Submarinecol: '',\n    Submarinedir: '',\n    Patrolboatrow: '',\n    Patrolboatcol: '',\n    Patrolboatdir: '',\n  };\n  output.Carrierrow = Math.floor(Math.random() * Math.floor(10));\n  output.Carriercol = Math.floor(Math.random() * Math.floor(10));\n  output.Carrierdir = Math.floor(Math.random() * Math.floor(2));\n  if (output.Carrierdir === 0) {\n    if (output.Carriercol + 5 > 10) {\n      do {\n        output.Carriercol = Math.floor(Math.random() * Math.floor(10));\n      } while (output.Carriercol + 5 > 10);\n    }\n  } else if (output.Carrierrow + 5 > 10) {\n    do {\n      output.Carrierrow = Math.floor(Math.random() * Math.floor(10));\n    } while (output.Carrierrow + 5 > 10);\n  }\n\n  let arr = [];\n  arr = arr.concat(\n    shipSquares(output.Carrierrow, output.Carriercol, output.Carrierdir, 5)\n  );\n\n  do {\n    output.Battleshiprow = Math.floor(Math.random() * Math.floor(10));\n    output.Battleshipcol = Math.floor(Math.random() * Math.floor(10));\n    output.Battleshipdir = Math.floor(Math.random() * Math.floor(2));\n    if (output.Battleshipdir === 0) {\n      if (output.Battleshipcol + 5 > 10) {\n        do {\n          output.Battleshipcol = Math.floor(Math.random() * Math.floor(10));\n        } while (output.Battleshipcol + 5 > 10);\n      }\n    } else if (output.Battleshiprow + 5 > 10) {\n      do {\n        output.Battleshiprow = Math.floor(Math.random() * Math.floor(10));\n      } while (output.Battleshiprow + 5 > 10);\n    }\n  } while (\n    inter(\n      arr,\n      shipSquares(\n        output.Battleshiprow,\n        output.Battleshipcol,\n        output.Battleshipdir,\n        4\n      )\n    )\n  );\n\n  arr = arr.concat(\n    shipSquares(\n      output.Battleshiprow,\n      output.Battleshipcol,\n      output.Battleshipdir,\n      4\n    )\n  );\n\n  do {\n    output.Destroyerrow = Math.floor(Math.random() * Math.floor(10));\n    output.Destroyercol = Math.floor(Math.random() * Math.floor(10));\n    output.Destroyerdir = Math.floor(Math.random() * Math.floor(2));\n    if (output.Destroyerdir === 0) {\n      if (output.Destroyercol + 5 > 10) {\n        do {\n          output.Destroyercol = Math.floor(Math.random() * Math.floor(10));\n        } while (output.Destroyercol + 5 > 10);\n      }\n    } else if (output.Destroyerrow + 5 > 10) {\n      do {\n        output.Destroyerrow = Math.floor(Math.random() * Math.floor(10));\n      } while (output.Destroyerrow + 5 > 10);\n    }\n  } while (\n    inter(\n      arr,\n      shipSquares(\n        output.Destroyerrow,\n        output.Destroyercol,\n        output.Destroyerdir,\n        3\n      )\n    )\n  );\n\n  arr = arr.concat(\n    shipSquares(\n      output.Destroyerrow,\n      output.Destroyercol,\n      output.Destroyerdir,\n      3\n    )\n  );\n\n  do {\n    output.Submarinerow = Math.floor(Math.random() * Math.floor(10));\n    output.Submarinecol = Math.floor(Math.random() * Math.floor(10));\n    output.Submarinedir = Math.floor(Math.random() * Math.floor(2));\n    if (output.Submarinedir === 0) {\n      if (output.Submarinecol + 5 > 10) {\n        do {\n          output.Submarinecol = Math.floor(Math.random() * Math.floor(10));\n        } while (output.Submarinecol + 5 > 10);\n      }\n    } else if (output.Submarinerow + 5 > 10) {\n      do {\n        output.Submarinerow = Math.floor(Math.random() * Math.floor(10));\n      } while (output.Submarinerow + 5 > 10);\n    }\n  } while (\n    inter(\n      arr,\n      shipSquares(\n        output.Submarinerow,\n        output.Submarinecol,\n        output.Submarinedir,\n        3\n      )\n    )\n  );\n\n  arr = arr.concat(\n    shipSquares(\n      output.Submarinerow,\n      output.Submarinecol,\n      output.Submarinedir,\n      3\n    )\n  );\n\n  do {\n    output.Patrolboatrow = Math.floor(Math.random() * Math.floor(10));\n    output.Patrolboatcol = Math.floor(Math.random() * Math.floor(10));\n    output.Patrolboatdir = Math.floor(Math.random() * Math.floor(2));\n    if (output.Patrolboatdir === 0) {\n      if (output.Patrolboatcol + 5 > 10) {\n        do {\n          output.Patrolboatcol = Math.floor(Math.random() * Math.floor(10));\n        } while (output.Patrolboatcol + 5 > 10);\n      }\n    } else if (output.Patrolboatrow + 5 > 10) {\n      do {\n        output.Patrolboatrow = Math.floor(Math.random() * Math.floor(10));\n      } while (output.Patrolboatrow + 5 > 10);\n    }\n  } while (\n    inter(\n      arr,\n      shipSquares(\n        output.Patrolboatrow,\n        output.Patrolboatcol,\n        output.Patrolboatdir,\n        2\n      )\n    )\n  );\n  arr = arr.concat(\n    shipSquares(\n      output.Patrolboatrow,\n      output.Patrolboatcol,\n      output.Patrolboatdir,\n      2\n    )\n  );\n  return output;\n};\n","import React from 'react';\nimport { useField } from 'formik';\nimport { MenuItem, TextField } from '@material-ui/core';\nimport './form.css';\n\nconst Row = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : '';\n  return (\n    <TextField\n      label={label + ' Row'}\n      {...field}\n      helperText={errorText}\n      error={!!errorText}\n      margin='dense'\n      className='input'\n      type='number'\n      select\n    >\n      <MenuItem value={0}>A</MenuItem>\n      <MenuItem value={1}>B</MenuItem>\n      <MenuItem value={2}>C</MenuItem>\n      <MenuItem value={3}>D</MenuItem>\n      <MenuItem value={4}>E</MenuItem>\n      <MenuItem value={5}>F</MenuItem>\n      <MenuItem value={6}>G</MenuItem>\n      <MenuItem value={7}>H</MenuItem>\n      <MenuItem value={8}>I</MenuItem>\n      <MenuItem value={9}>J</MenuItem>\n    </TextField>\n  );\n};\n\nconst Column = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : '';\n  return (\n    <TextField\n      label={label + ' Column'}\n      {...field}\n      helperText={errorText}\n      error={!!errorText}\n      margin='dense'\n      className='input'\n      type='number'\n      select\n    >\n      <MenuItem value={0}>1</MenuItem>\n      <MenuItem value={1}>2</MenuItem>\n      <MenuItem value={2}>3</MenuItem>\n      <MenuItem value={3}>4</MenuItem>\n      <MenuItem value={4}>5</MenuItem>\n      <MenuItem value={5}>6</MenuItem>\n      <MenuItem value={6}>7</MenuItem>\n      <MenuItem value={7}>8</MenuItem>\n      <MenuItem value={8}>9</MenuItem>\n      <MenuItem value={9}>10</MenuItem>\n    </TextField>\n  );\n};\n\nconst Direction = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : '';\n  return (\n    <TextField\n      label={label + ' Direction'}\n      {...field}\n      helperText={errorText}\n      error={!!errorText}\n      margin='dense'\n      className='input'\n      type='number'\n      select\n    >\n      <MenuItem value={0}>Right</MenuItem>\n      <MenuItem value={1}>Down</MenuItem>\n    </TextField>\n  );\n};\n\nexport default (props) => {\n  return (\n    <div className='shipRow'>\n      <Row label={props.name} name={props.name + 'row'} />\n      <Column label={props.name} name={props.name + 'col'} />\n      <Direction label={props.name} name={props.name + 'dir'} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport { Button } from '@material-ui/core';\nimport { initialValues, validationSchema } from './validation';\nimport './form.css';\nimport Gameboard from './gameboard';\nimport output from './computerShips';\nimport FormGroup from './fields';\n\nexport default class Player extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSubmitted: false,\n      enemyBoard: Array(10)\n        .fill(null)\n        .map(() => Array(10).fill(null)),\n      compCheck: false,\n      location: '',\n    };\n  }\n\n  computerPlay = () => {\n    const enemyBoard = this.state.enemyBoard;\n    let r, c;\n    do {\n      r = Math.floor(Math.random() * Math.floor(10));\n      c = Math.floor(Math.random() * Math.floor(10));\n    } while (enemyBoard[r][c] !== null);\n    enemyBoard[r][c] = this.board.receiveAttack(r, c);\n    this.setState({ enemyBoard: enemyBoard });\n    if (this.board.fleetDown()) this.setState({ compCheck: true });\n  };\n\n  winCheck = () => {\n    if (this.eBoard.fleetDown()) this.setState({ compCheck: true });\n  };\n\n  onClickHandle = () => {\n    this.computerPlay();\n    this.winCheck();\n  };\n\n  render() {\n    const fleet = [\n      'Carrier',\n      'Battleship',\n      'Destroyer',\n      'Submarine',\n      'Patrolboat',\n    ];\n\n    return (\n      <React.Fragment>\n        <h1>Battleship</h1>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={(data, { setSubmitting }) => {\n            setSubmitting(true);\n            this.setState({ isSubmitted: true, location: output() });\n            setSubmitting(false);\n          }}\n          validateOnChange={true}\n          validateOnBlur={true}\n        >\n          {({ dirty, isValid, isSubmitting, values }) => (\n            <>\n              {!this.state.isSubmitted && (\n                <Form className='forms'>\n                  <p>Place your ships</p>\n                  {fleet.map((x) => (\n                    <FormGroup name={x} key={x} />\n                  ))}\n                  <br />\n                  <Button\n                    type='submit'\n                    variant='contained'\n                    color='primary'\n                    disabled={isSubmitting || !dirty || !isValid}\n                  >\n                    Submit\n                  </Button>\n                </Form>\n              )}\n              <br />\n              {this.state.isSubmitted && (\n                <div className='boards'>\n                  <Gameboard\n                    who='My Board'\n                    input={values}\n                    computer={1}\n                    dis={true}\n                    btnC='mySquare'\n                    ref={(x) => (this.board = x)}\n                  />\n                  <Gameboard\n                    who='Enemy Board'\n                    input={this.state.location}\n                    dis={this.state.compCheck}\n                    btnC='eSquare'\n                    onClick={this.onClickHandle}\n                    ref={(x) => (this.eBoard = x)}\n                  />\n                </div>\n              )}\n            </>\n          )}\n        </Formik>\n      </React.Fragment>\n    );\n  }\n}\n","import { MuiThemeProvider, CssBaseline } from '@material-ui/core';\nimport { purple } from '@material-ui/core/colors';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport React from 'react';\nimport './App.css';\nimport Player from './components/player';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark', // Switching the dark mode on is a single property value change.\n    primary: { main: purple[400] },\n    secondary: { main: '#00c853' },\n  },\n});\n\nexport default function App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className='container'>\n        <div className='menu'>\n          <Player />\n        </div>\n      </div>\n    </MuiThemeProvider>\n  );\n}\n","import React from 'react';\nimport App from './App';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'fontsource-roboto';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}